{"version":3,"file":"component---src-pages-about-js-1a44654f63e6760d2b9b.js","mappings":"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","sources":["webpack://thug-pugs/./node_modules/react-nl2br/index.js","webpack://thug-pugs/./src/images/community-scene.jpg","webpack://thug-pugs/./src/components/community-section.js","webpack://thug-pugs/./src/images/about-tp.gif","webpack://thug-pugs/./src/pages/about.js","webpack://thug-pugs/./src/styles/arrow-deco.js","webpack://thug-pugs/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://thug-pugs/./src/styles/fold.js"],"sourcesContent":["'use strict';\n\nvar jsxRuntime = require('react/jsx-runtime');\n\nvar _jsx = jsxRuntime.jsx;\nvar newlineRegex = /(\\r\\n|\\r|\\n)/g;\n\nmodule.exports = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return str.split(newlineRegex).map(function (line, index) {\n    if (line.match(newlineRegex)) {\n      return _jsx('br', {\n        key: index\n      });\n    }\n\n    return line;\n  });\n};","export default __webpack_public_path__ + \"static/community-scene-d7f75314809a2f3964a927cd36cd8b04.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { themeVal, glsp } from '@theme/utils';\nimport { media } from '@theme/media';\n\nimport { FoldContent, FoldInner } from '../styles/fold';\nimport { Heading, renderHeadingSize } from '../styles/heading';\nimport { Lead } from '../styles/type';\nimport { Button } from '../styles/button';\nimport { IconDiscord } from './icons/discord';\n\nimport communitySceneUrl from '../images/community-scene.jpg';\n\nconst CommunityFold = styled.div`\n  background-color: ${themeVal('color.neut1')};\n  color: ${themeVal('color.neut3')};\n  background-image: url(${communitySceneUrl});\n  background-size: cover;\n\n  ${Heading} {\n    ${media.smallDown`\n      ${renderHeadingSize({ size: 'large' })}\n    `}\n  }\n\n  ${FoldInner} {\n    padding-top: ${glsp(3)};\n    padding-bottom: ${glsp(3)};\n\n    ${media.largeUp`\n      padding-top: ${glsp(5)};\n      padding-bottom: ${glsp(4)};\n    `}\n  }\n\n  ${FoldContent} {\n    grid-column: auto / span 4;\n\n    ${media.mediumUp`\n      grid-column: auto / span 4;\n    `}\n\n    ${media.largeUp`\n      grid-column: auto / span 6;\n    `}\n  }\n\n  ${Button} {\n    margin-top: ${glsp(2)};\n    gap: ${glsp()};\n  }\n`;\n\nexport default function CommunitySection() {\n  return (\n    <section>\n      <CommunityFold>\n        <FoldInner>\n          <FoldContent>\n            <Heading as='h2' size='xlarge' variation='surface'>\n              Community\n            </Heading>\n            <Lead>\n              The Thug Pugs Community is a vibrant space where we and our\n              holders participate in governance votes, engage with ideas,\n              express our creativity and simply have fun.\n            </Lead>\n            <Button\n              size='large'\n              variation='primary-fill'\n              as='a'\n              href='https://discord.gg/thugpugs'\n            >\n              <IconDiscord /> Join our Discord\n            </Button>\n          </FoldContent>\n        </FoldInner>\n      </CommunityFold>\n    </section>\n  );\n}\n","export default __webpack_public_path__ + \"static/about-tp-e889540742b0672a2106726464217f08.gif\";","import React from 'react';\nimport T from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport styled, { css } from 'styled-components';\nimport nl2br from 'react-nl2br';\nimport { themeVal, glsp } from '@theme/utils';\nimport { media } from '@theme/media';\nimport { listReset, truncated } from '@theme/helpers';\n\nimport Layout from '../components/layout';\nimport CommunitySection from '../components/community-section';\nimport { FoldContent, FoldInner } from '../styles/fold';\nimport { Heading } from '../styles/heading';\nimport { Lead } from '../styles/type';\nimport { ArrowDecor } from '../styles/arrow-deco';\n\nimport aboutTpGif from '../images/about-tp.gif';\n\nconst HeroFold = styled.div`\n  background: ${themeVal('color.base')};\n  color: ${themeVal('color.surface')};\n  /* Account for header height */\n  padding: ${glsp(7.25, 2, 3, 2)};\n  margin-top: ${glsp(-7.25)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${FoldContent} {\n    display: flex;\n    flex-flow: column;\n    flex: 1;\n    align-items: center;\n    gap: ${glsp(2)};\n  }\n\n  ${Lead} {\n    max-width: 44rem;\n    text-align: center;\n  }\n`;\n\nconst HeroMedia = styled.div`\n  aspect-ratio: 16/9;\n  width: 100%;\n  max-width: 60rem;\n  border-radius: ${themeVal('shape.rounded')};\n  overflow: hidden;\n`;\n\nconst AboutFoldHeader = styled.header`\n  background: ${themeVal('color.neut4-200')};\n\n  > ${FoldInner}:first-child {\n    position: relative;\n    padding-top: ${glsp(3)};\n    padding-bottom: ${glsp(3)};\n\n    ${media.largeUp`\n      padding-top: ${glsp(5)};\n      padding-bottom: ${glsp(4)};\n    `}\n  }\n\n  ${FoldContent} {\n    grid-column: auto / span 4;\n\n    ${media.mediumUp`\n      grid-column: auto / span 3;\n    `}\n\n    ${media.largeUp`\n      grid-column: auto / span 6;\n    `}\n  }\n\n  ${ArrowDecor} {\n    position: absolute;\n    bottom: 0;\n    left: ${glsp()};\n    transform: translate(0, 47%);\n    color: ${themeVal('color.neut4-200')};\n\n    ${media.mediumUp`\n      left: ${glsp(2)};\n    `}\n  }\n`;\n\nconst AboutFoldMedia = styled(FoldContent)`\n  display: flex;\n  justify-content: center;\n\n  ${media.largeUp`\n    justify-content:  end;\n    margin: -2rem 0;\n  `}\n`;\n\nconst CardsFold = styled.div`\n  ${({ variation }) => css`\n    background: ${themeVal(['color', variation])};\n  `}\n\n  ${FoldContent} {\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: start;\n    padding: ${glsp(3, 0)};\n    gap: ${glsp(2)};\n    grid-column: 1 / -1;\n\n    ${media.largeUp`\n      padding: ${glsp(5, 0)};\n    `}\n  }\n`;\n\nconst CardsList = styled.ul`\n  ${listReset()}\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(4, 1fr);\n  gap: ${glsp(1.5)};\n\n  ${media.mediumUp`\n    gap: ${glsp(2)};\n    grid-template-columns: repeat(6, 1fr);\n  `}\n\n  ${media.largeUp`\n    grid-template-columns: repeat(12, 1fr);\n  `}\n\n  li {\n    display: flex;\n    min-width: 0;\n  }\n`;\n\nconst CardLayoutBase = styled.div`\n  display: flex;\n  flex: 1;\n  flex-flow: column;\n  align-items: center;\n  min-width: 0;\n  gap: ${glsp(2)};\n  background: ${themeVal('color.neut1')};\n  border-radius: ${themeVal('shape.rounded')};\n  padding: ${glsp(2)};\n\n  ${Heading} {\n    text-transform: none;\n  }\n`;\n\nconst TeamCardsList = styled(CardsList)`\n  li {\n    grid-column: auto / span 4;\n\n    ${media.smallUp`\n      grid-column: auto / span 2;\n    `}\n\n    ${media.mediumUp`\n      grid-column: auto / span 3;\n    `}\n\n    ${media.largeUp`\n      grid-column: auto / span 4;\n    `}\n  }\n`;\n\nconst TeamCard = styled(CardLayoutBase)`\n  background: ${themeVal('color.base')};\n  padding: ${glsp(2, 0.75, 0.75, 0.75)};\n\n  .gatsby-image-wrapper {\n    max-width: 13rem;\n  }\n`;\n\nconst TeamCardContent = styled.div`\n  flex: 1;\n  background: ${themeVal('color.neut1')};\n  border-radius: ${themeVal('shape.rounded')};\n  padding: ${glsp()};\n  color: ${themeVal('color.neut3')};\n`;\n\nconst TeamCardDescription = styled.p`\n  word-break: break-word;\n`;\n\nconst ModsFoldHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  max-width: 30rem;\n  gap: ${glsp()};\n`;\n\nconst ModsCardsList = styled(CardsList)`\n  li {\n    grid-column: auto / span 4;\n\n    ${media.smallUp`\n      grid-column: auto / span 2;\n    `}\n\n    ${media.mediumUp`\n      grid-column: auto / span 2;\n    `}\n\n    ${media.largeUp`\n      grid-column: auto / span 4;\n    `}\n\n    ${media.xlargeUp`\n      grid-column: auto / span 3;\n    `}\n  }\n`;\n\nconst ModsCard = styled(CardLayoutBase)`\n  background: ${themeVal('color.neut1')};\n  padding: ${glsp()};\n\n  ${media.largeUp`\n    padding: ${glsp(2)};\n  `}\n\n  ${Heading} {\n    ${truncated()}\n    max-width: 100%;\n  }\n`;\n\nconst IndexPage = (props) => {\n  const { data } = props;\n\n  return (\n    <Layout>\n      <main>\n        <section>\n          <HeroFold>\n            <FoldContent>\n              <HeroMedia>\n                <iframe\n                  width='100%'\n                  height='100%'\n                  src='https://www.youtube-nocookie.com/embed/QkKGlkbiOYI?controls=0'\n                  title='YouTube video player'\n                  frameBorder='0'\n                  allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n                  allowFullScreen\n                />\n              </HeroMedia>\n              <Lead>\n                Thug Pugs is a metaverse brand made at the intersection of\n                outstanding NFT art and compelling story to fuel a ruthless game\n                with juicy <strong>$TBONES</strong> for grabs.\n              </Lead>\n            </FoldContent>\n          </HeroFold>\n        </section>\n\n        <section>\n          <AboutFoldHeader>\n            <FoldInner>\n              <FoldContent>\n                <Heading as='h1' size='xlarge'>\n                  About\n                </Heading>\n                <Lead>\n                  Pugs seemed doomed to live as fancy props — mere portable\n                  delights for their human masters. But a few rogue ones\n                  didn&apos;t want to play the nice-dog game anymore.\n                  <br />\n                  They are the Thug Pugs, and although they all seem adorable to\n                  the eye, their territorial nature quickly emerged to make\n                  things ugly, and gangs soon emerged.\n                </Lead>\n              </FoldContent>\n              <AboutFoldMedia>\n                <img\n                  src={aboutTpGif}\n                  alt='Thug Pugs logotype'\n                  width={300}\n                  height={317}\n                />\n              </AboutFoldMedia>\n              <ArrowDecor />\n            </FoldInner>\n          </AboutFoldHeader>\n\n          <CardsFold variation='neut1'>\n            <FoldInner>\n              <FoldContent>\n                <Heading as='h2' size='xlarge' variation='surface'>\n                  The Team\n                </Heading>\n                <TeamCardsList>\n                  {data.allTeamYaml.nodes.map((m) => (\n                    <li key={m.id}>\n                      <TeamCard>\n                        <GatsbyImage\n                          image={getImage(m.image)}\n                          alt={`${m.name} avatar Thug Pug`}\n                        />\n                        <TeamCardContent>\n                          <Heading as='h3' size='medium' variation='surface'>\n                            {m.name}\n                          </Heading>\n                          <TeamCardDescription>\n                            {nl2br(m.description)}\n                          </TeamCardDescription>\n                        </TeamCardContent>\n                      </TeamCard>\n                    </li>\n                  ))}\n                </TeamCardsList>\n              </FoldContent>\n            </FoldInner>\n          </CardsFold>\n\n          <CardsFold variation='base'>\n            <FoldInner>\n              <FoldContent>\n                <ModsFoldHeadline>\n                  <Heading as='h2' size='xlarge' variation='surface'>\n                    The Mods\n                  </Heading>\n                  <Lead variation='neut3'>\n                    Our mods are awesome humans who help out the other amazing\n                    humans in our community.\n                  </Lead>\n                </ModsFoldHeadline>\n                <ModsCardsList>\n                  {data.allModsYaml.nodes.map((m) => (\n                    <li key={m.id}>\n                      <ModsCard>\n                        <GatsbyImage\n                          image={getImage(m.image)}\n                          alt={`${m.name} avatar Thug Pug`}\n                        />\n                        <Heading as='h3' size='medium' variation='surface'>\n                          {m.name}\n                        </Heading>\n                      </ModsCard>\n                    </li>\n                  ))}\n                </ModsCardsList>\n              </FoldContent>\n            </FoldInner>\n          </CardsFold>\n        </section>\n\n        <CommunitySection />\n      </main>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nIndexPage.propTypes = {\n  data: T.shape({\n    allTeamYaml: T.object,\n    allModsYaml: T.object\n  })\n};\n\nexport const query = graphql`\n  query {\n    allTeamYaml {\n      nodes {\n        name\n        id\n        description\n        image {\n          childImageSharp {\n            gatsbyImageData(width: 440, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n\n    allModsYaml {\n      nodes {\n        name\n        id\n        image {\n          childImageSharp {\n            gatsbyImageData(width: 180, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const ArrowDecor = styled(\n  /* eslint-disable-next-line react/display-name */\n  React.forwardRef((props, ref) => {\n    /* eslint-disable-next-line  */\n    const { color, ...rest } = props;\n    return (\n      <svg\n        ref={ref}\n        width='50'\n        height='58'\n        viewBox='0 0 50 58'\n        fill={color || 'currentColor'}\n        xmlns='http://www.w3.org/2000/svg'\n        {...rest}\n      >\n        <path d='M0.0994029 3.68601C0.0994035 1.3766 2.5994 -0.0667671 4.5994 1.08793L48.3012 26.3192C50.3012 27.4739 50.3012 30.3606 48.3012 31.5153L4.5994 56.7466C2.5994 57.9013 0.0994047 56.4579 0.0994044 54.1485L0.0994029 3.68601Z' />\n      </svg>\n    );\n  })\n)`\n  /* icons must be styled-components */\n`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import styled from 'styled-components';\nimport { glsp } from '@theme/utils';\nimport { media } from '@theme/media';\n\nimport Constrainer from './constrainer';\n\nexport const Fold = styled.div`\n  /* styled-component */\n`;\n\nexport const FoldMedia = styled.div`\n  /* styled-component */\n`;\n\nexport const FoldContent = styled.div`\n  /* styled-component */\n`;\n\nexport const FoldInner = styled(Constrainer)`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: ${glsp()};\n\n  ${media.mediumUp`\n    grid-template-columns: repeat(6, 1fr);\n  `}\n\n  ${media.largeUp`\n    grid-template-columns: repeat(12, 1fr);\n  `}\n`;\n"],"names":["_jsx","jsx","newlineRegex","module","exports","str","split","map","line","index","match","key","CommunityFold","styled","themeVal","communitySceneUrl","Heading","media","renderHeadingSize","size","FoldInner","glsp","FoldContent","Button","CommunitySection","as","variation","href","HeroFold","Lead","HeroMedia","AboutFoldHeader","ArrowDecor","AboutFoldMedia","CardsFold","css","CardsList","listReset","CardLayoutBase","TeamCardsList","TeamCard","TeamCardContent","TeamCardDescription","ModsFoldHeadline","ModsCardsList","ModsCard","truncated","props","data","width","height","src","title","frameBorder","allow","allowFullScreen","aboutTpGif","alt","allTeamYaml","nodes","m","id","G","image","getImage","name","nl2br","description","allModsYaml","React","ref","color","rest","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","viewBox","fill","xmlns","d","FoldMedia","Constrainer"],"sourceRoot":""}