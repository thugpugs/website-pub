{"version":3,"file":"component---src-pages-about-js-6619a076c728a59d7ca8.js","mappings":"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","sources":["webpack://thug-pugs/./node_modules/react-nl2br/index.js","webpack://thug-pugs/./src/images/about-tp.gif","webpack://thug-pugs/./src/pages/about.js"],"sourcesContent":["'use strict';\n\nvar jsxRuntime = require('react/jsx-runtime');\n\nvar _jsx = jsxRuntime.jsx;\nvar newlineRegex = /(\\r\\n|\\r|\\n)/g;\n\nmodule.exports = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return str.split(newlineRegex).map(function (line, index) {\n    if (line.match(newlineRegex)) {\n      return _jsx('br', {\n        key: index\n      });\n    }\n\n    return line;\n  });\n};","export default __webpack_public_path__ + \"static/about-tp-e889540742b0672a2106726464217f08.gif\";","import React from 'react';\nimport T from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport styled, { css } from 'styled-components';\nimport nl2br from 'react-nl2br';\nimport Fade from 'react-reveal/Fade';\nimport { themeVal, glsp } from '@theme/utils';\nimport { media } from '@theme/media';\nimport { listReset, truncated } from '@theme/helpers';\n\nimport Layout from '../components/layout';\nimport CommunitySection from '../components/community-section';\nimport { FoldContent, FoldInner } from '../styles/fold';\nimport { Heading } from '../styles/heading';\nimport { Lead } from '../styles/type';\nimport { ArrowDecor } from '../styles/arrow-deco';\nimport withReveal from '../utils/with-reveal';\n\nimport aboutTpGif from '../images/about-tp.gif';\n\nconst HeroFold = styled.div`\n  background: ${themeVal('color.base')};\n  color: ${themeVal('color.surface')};\n  /* Account for header height */\n  padding: ${glsp(7.25, 2, 3, 2)};\n  margin-top: ${glsp(-7.25)};\n  display: flex;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n\n  ${FoldContent} {\n    display: flex;\n    flex-flow: column;\n    flex: 1;\n    align-items: center;\n    gap: ${glsp(2)};\n  }\n\n  ${Lead} {\n    max-width: 44rem;\n    text-align: center;\n  }\n`;\n\nconst HeroMedia = styled.div`\n  aspect-ratio: 16/9;\n  width: 100%;\n  max-width: ${themeVal('layout.max')};\n  border-radius: ${themeVal('shape.rounded2')};\n  overflow: hidden;\n`;\n\nconst AboutFoldHeader = styled.header`\n  background: ${themeVal('color.neut4-200')};\n\n  > ${FoldInner}:first-child {\n    position: relative;\n    padding-top: ${glsp(3)};\n    padding-bottom: ${glsp(3)};\n\n    ${media.largeUp`\n      padding-top: ${glsp(5)};\n      padding-bottom: ${glsp(4)};\n    `}\n  }\n\n  ${FoldContent} {\n    grid-column: auto / span 4;\n\n    ${media.mediumUp`\n      grid-column: auto / span 3;\n    `}\n\n    ${media.largeUp`\n      grid-column: auto / span 6;\n    `}\n  }\n\n  ${ArrowDecor} {\n    position: absolute;\n    bottom: 0;\n    left: ${glsp()};\n    transform: translate(0, 47%);\n    color: ${themeVal('color.neut4-200')};\n\n    ${media.mediumUp`\n      left: ${glsp(2)};\n    `}\n  }\n`;\n\nconst AboutFoldMedia = styled(FoldContent)`\n  display: flex;\n  justify-content: center;\n\n  ${media.largeUp`\n    justify-content:  end;\n    margin: -2rem 0;\n  `}\n`;\n\nconst CardsFold = styled.div`\n  ${({ variation }) => css`\n    background: ${themeVal(['color', variation])};\n  `}\n\n  ${FoldContent} {\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: start;\n    padding: ${glsp(4, 0)};\n    gap: ${glsp(2)};\n    grid-column: 1 / -1;\n\n    ${media.largeUp`\n      padding: ${glsp(6, 0)};\n    `}\n  }\n`;\n\nconst CardsList = styled.ul`\n  ${listReset()}\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(4, 1fr);\n  gap: ${glsp(1.5)};\n\n  ${media.mediumUp`\n    gap: ${glsp(2)};\n    grid-template-columns: repeat(6, 1fr);\n  `}\n\n  ${media.largeUp`\n    grid-template-columns: repeat(12, 1fr);\n  `}\n\n  li {\n    display: flex;\n    min-width: 0;\n  }\n`;\n\nconst CardLayoutBase = styled.div`\n  display: flex;\n  flex: 1;\n  flex-flow: column;\n  align-items: center;\n  min-width: 0;\n  gap: ${glsp(2)};\n  background: ${themeVal('color.neut1')};\n  padding: ${glsp(2)};\n\n  ${Heading} {\n    text-transform: none;\n  }\n`;\n\nconst TeamCardsList = withReveal(\n  styled(CardsList)`\n    li {\n      grid-column: auto / span 4;\n\n      ${media.smallUp`\n      grid-column: auto / span 2;\n    `}\n\n      ${media.mediumUp`\n      grid-column: auto / span 3;\n    `}\n\n    ${media.largeUp`\n      grid-column: auto / span 4;\n    `}\n    }\n  `,\n  <Fade bottom cascade fraction={0.05} />\n);\n\nconst TeamCard = styled(CardLayoutBase)`\n  border-radius: ${themeVal('shape.rounded3')};\n  background: ${themeVal('color.base')};\n  padding: ${glsp(2, 0.75, 0.75, 0.75)};\n\n  .gatsby-image-wrapper {\n    max-width: 13rem;\n  }\n`;\n\nconst TeamCardContent = styled.div`\n  flex: 1;\n  background: ${themeVal('color.neut1')};\n  border-radius: ${themeVal('shape.rounded3')} ${themeVal('shape.rounded3')}\n    ${themeVal('shape.rounded2')} ${themeVal('shape.rounded2')};\n  padding: ${glsp(2)};\n  color: ${themeVal('color.neut3')};\n`;\n\nconst TeamCardDescription = styled.p`\n  word-break: break-word;\n`;\n\nconst ModsFoldHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  max-width: 30rem;\n  gap: ${glsp()};\n`;\n\nconst ModsCardsList = withReveal(\n  styled(CardsList)`\n    li {\n      grid-column: auto / span 4;\n\n      ${media.smallUp`\n      grid-column: auto / span 2;\n    `}\n\n      ${media.mediumUp`\n      grid-column: auto / span 2;\n    `}\n\n    ${media.largeUp`\n      grid-column: auto / span 4;\n    `}\n\n    ${media.xlargeUp`\n      grid-column: auto / span 3;\n    `}\n    }\n  `,\n  <Fade bottom cascade />\n);\n\nconst ModsCard = styled(CardLayoutBase)`\n  border-radius: ${themeVal('shape.rounded2')};\n  background: ${themeVal('color.neut1')};\n  padding: ${glsp()};\n\n  ${media.largeUp`\n    padding: ${glsp(2)};\n  `}\n\n  ${Heading} {\n    ${truncated()}\n    max-width: 100%;\n  }\n`;\n\nconst IndexPage = (props) => {\n  const { data } = props;\n\n  return (\n    <Layout>\n      <main>\n        <section>\n          <HeroFold>\n            <FoldContent>\n              <HeroMedia>\n                <iframe\n                  width='100%'\n                  height='100%'\n                  src='https://www.youtube-nocookie.com/embed/QkKGlkbiOYI?controls=0'\n                  title='YouTube video player'\n                  frameBorder='0'\n                  allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n                  allowFullScreen\n                />\n              </HeroMedia>\n              <Fade bottom>\n                <Lead>\n                  Thug Pugs is a metaverse brand made at the intersection of\n                  outstanding NFT art and compelling story to fuel a ruthless\n                  game with juicy <strong>$TBONES</strong> for grabs.\n                </Lead>\n              </Fade>\n            </FoldContent>\n          </HeroFold>\n        </section>\n\n        <section>\n          <AboutFoldHeader>\n            <FoldInner>\n              <FoldContent>\n                <Fade bottom>\n                  <Heading as='h1' size='xlarge'>\n                    About\n                  </Heading>\n                  <Lead>\n                    Pugs seemed doomed to live as fancy props — mere portable\n                    delights for their human masters. But a few rogue ones\n                    didn&apos;t want to play the nice-dog game anymore.\n                    <br />\n                    They are the Thug Pugs, and although they all seem adorable\n                    to the eye, their territorial nature quickly emerged to make\n                    things ugly, and gangs soon emerged.\n                  </Lead>\n                </Fade>\n              </FoldContent>\n              <AboutFoldMedia>\n                <img\n                  src={aboutTpGif}\n                  alt='Thug Pugs logotype'\n                  width={300}\n                  height={317}\n                />\n              </AboutFoldMedia>\n              <ArrowDecor />\n            </FoldInner>\n          </AboutFoldHeader>\n\n          <CardsFold variation='neut1'>\n            <FoldInner>\n              <FoldContent>\n                <Fade bottom>\n                  <Heading as='h2' size='xlarge' variation='surface'>\n                    The Team\n                  </Heading>\n                </Fade>\n                <TeamCardsList>\n                  {data.allTeamYaml.nodes.map((m) => (\n                    <li key={m.id}>\n                      <TeamCard>\n                        <GatsbyImage\n                          image={getImage(m.image)}\n                          alt={`${m.name} avatar Thug Pug`}\n                        />\n                        <TeamCardContent>\n                          <Heading as='h3' size='medium' variation='surface'>\n                            {m.name}\n                          </Heading>\n                          <TeamCardDescription>\n                            {nl2br(m.description)}\n                          </TeamCardDescription>\n                        </TeamCardContent>\n                      </TeamCard>\n                    </li>\n                  ))}\n                </TeamCardsList>\n              </FoldContent>\n            </FoldInner>\n          </CardsFold>\n\n          <CardsFold variation='base'>\n            <FoldInner>\n              <FoldContent>\n                <ModsFoldHeadline>\n                  <Fade bottom>\n                    <Heading as='h2' size='xlarge' variation='surface'>\n                      The Mods\n                    </Heading>\n                    <Lead variation='neut3'>\n                      Our mods are awesome humans who help out the other amazing\n                      humans in our community.\n                    </Lead>\n                  </Fade>\n                </ModsFoldHeadline>\n                <ModsCardsList>\n                  {data.allModsYaml.nodes.map((m) => (\n                    <li key={m.id}>\n                      <ModsCard>\n                        <GatsbyImage\n                          image={getImage(m.image)}\n                          alt={`${m.name} avatar Thug Pug`}\n                        />\n                        <Heading as='h3' size='medium' variation='surface'>\n                          {m.name}\n                        </Heading>\n                      </ModsCard>\n                    </li>\n                  ))}\n                </ModsCardsList>\n              </FoldContent>\n            </FoldInner>\n          </CardsFold>\n        </section>\n\n        <CommunitySection />\n      </main>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nIndexPage.propTypes = {\n  data: T.shape({\n    allTeamYaml: T.object,\n    allModsYaml: T.object\n  })\n};\n\nexport const query = graphql`\n  query {\n    allTeamYaml {\n      nodes {\n        name\n        id\n        description\n        image {\n          childImageSharp {\n            gatsbyImageData(width: 440, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n\n    allModsYaml {\n      nodes {\n        name\n        id\n        image {\n          childImageSharp {\n            gatsbyImageData(width: 180, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_jsx","jsx","newlineRegex","module","exports","str","split","map","line","index","match","key","HeroFold","styled","themeVal","glsp","FoldContent","Lead","HeroMedia","AboutFoldHeader","FoldInner","media","ArrowDecor","AboutFoldMedia","CardsFold","variation","css","CardsList","listReset","CardLayoutBase","Heading","TeamCardsList","withReveal","bottom","cascade","fraction","TeamCard","TeamCardContent","TeamCardDescription","ModsFoldHeadline","ModsCardsList","ModsCard","truncated","props","data","width","height","src","title","frameBorder","allow","allowFullScreen","as","size","aboutTpGif","alt","allTeamYaml","nodes","m","id","G","image","getImage","name","nl2br","description","allModsYaml"],"sourceRoot":""}